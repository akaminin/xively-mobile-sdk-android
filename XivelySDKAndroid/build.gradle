apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

apply from: '../jacoco.gradle'

android {
    compileSdkVersion 21
    buildToolsVersion buildToolsVersion
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 21

        versionCode 3
        versionName "0.3.0"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        abortOnError true
        absolutePaths false
        lintConfig file("lint.xml")
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

publishing {
    repositories {
        maven {
            url "file://$project.buildDir/outputs/mavenArtifact"
        }
    }
}

def pomBuilder = { xmlProvider ->
    def root = xmlProvider.asNode()

    def addDependency = { Dependency dependency ->
        def dependencyNodes = root["dependencies"][0] ?: root.appendNode("dependencies")

        if (dependency.group == null || dependency.version == null || dependency.name == null || dependency.name == "unspecified") {
            return // Avoid empty dependency nodes
        }
        def dependencyNode = dependencyNodes.appendNode('dependency')
        dependencyNode.appendNode('groupId', dependency.group)
        dependencyNode.appendNode('artifactId', dependency.name)
        dependencyNode.appendNode('version', dependency.version)

        if (dependency.name == "guice") {
            dependencyNode.appendNode('classifier', 'no_aop')
        }

        if (xmlProvider.hasProperty('optional') && dependency.optional) {
            dependencyNode.appendNode('optional', 'true')
        }

        if (!dependency.transitive) {
            // If this dependency is transitive, we should force exclude all its dependencies them from the POM
            def exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
            exclusionNode.appendNode('groupId', '*')
            exclusionNode.appendNode('artifactId', '*')
        } else if (!dependency.properties.excludeRules.empty) {
            // Otherwise add specified exclude rules
            def exclusionsNode = dependencyNode.appendNode('exclusions')
            dependency.properties.excludeRules.each { ExcludeRule rule ->
                def exclusionNode = exclusionsNode.appendNode('exclusion')
                exclusionNode.appendNode('groupId', rule.group ?: '*')
                exclusionNode.appendNode('artifactId', rule.module ?: '*')
            }
        }
    }
    // Add dependencies that everyone has
    configurations.implementation.allDependencies.each addDependency
    configurations.api.allDependencies.each addDependency

}

publishing.publications {
    android.libraryVariants.all { variant ->
        if (variant.buildType.name != "release") {
            return
        }

        def publicationName = "${variant.name.capitalize()}"

        "$publicationName"(MavenPublication) {
            groupId "com.xively.android"
            artifactId "xively-core"
            version "0.3.0"

            artifact(variant.packageLibrary) {
                extension 'aar'
            }

            pom {
                packaging 'aar'
                withXml {
                    pomBuilder(it)
                }
            }
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation('org.robolectric:robolectric:2.4') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    testImplementation 'com.squareup.retrofit2:retrofit-mock:2.3.0'

    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.2'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    implementation 'io.jsonwebtoken:jjwt:0.9.0'
}

